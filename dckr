#!/bin/bash

# Array of all functions
FUNCS=($(grep "^function" $0 | sed -e 's/function //' -e 's/ {//g' | sed ':a;N;$!ba;s/\n/ /g'))

# define without function prefix so it isnt caught in FUNCS array
printUsage() {
    echo "Usage: $0 [docker-location] "$(IFS=\|; echo "${FUNCS[*]}")
    exit 1;
}

# check directory is defined and is a docker compose directory
if [ -z $1 ]; then
    printUsage
fi
if [ ! -d $1 ]; then
    echo "Error: $0: Directory $1 doesn't exist"
    exit 1;
fi
if [ ! -f "$1/docker-compose.yml" ]; then
    echo "Error: $0: Directory $1 is not a docker-compose directory"
    exit 1;
fi

DOCKER_PATH="$1";
shift;

cd $DOCKER_PATH

# source .env if it exists
if [ -f .env ]; then
    source .env
fi

function start {
    docker-compose up -d
}

function stop {
    docker-compose down
}

function restart {
    stop && start
}

function compose {
    docker-compose $@
}

# If first arg exists as a function, execute it and pass rest of args in
for i in "${FUNCS[@]}"
do
    if [ "$i" == "$1" ]; then
        func=$1
        shift;
        $func $@
        exit 0;
    fi
done

#else
printUsage;
exit 1
